@page "/"
@inject IJSRuntime JS

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Barcode Scanner</title>
    <script src="https://cdn.rawgit.com/serratus/quaggaJS/master/dist/quagga.min.js"></script>
    <style>
        #video {
            width: 100%;
            height: auto;
            border: 1px solid black;
        }
    </style>
</head>
<body>
    <h1>Scan a Barcode</h1>
    <video id="video" autoplay></video>
    <div id="result"></div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Quagga.init({
                inputStream: {
                    name: "Live",
                    type: "LiveStream",
                    target: document.querySelector('#video'), 
                    constraints: {
                        facingMode: "environment" 
                    },
                },
                decoder: {
                    readers: ["code_128_reader", "ean_reader", "ean_8_reader", "code_39_reader", "code_39_vin_reader"]
                },
            }, function (err) {
                if (err) {
                    console.log(err);
                    return;
                }
                console.log("Initialization finished. Ready to start");
                Quagga.start();
            });

            Quagga.onDetected(function (data) {
                var code = data.codeResult.code;
                document.querySelector('#result').innerText = "Detected code: " + code;
                Quagga.stop();
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', async function () {

            console.log('into the js func');
            const videoElement = document.getElementById('video');

            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                const stream = await navigator.mediaDevices.getUserMedia({ video: true });
                videoElement.srcObject = stream;
            } else {
                console.error("Camera not supported on this device.");
            }
        });
    </script>
</body>
</html>